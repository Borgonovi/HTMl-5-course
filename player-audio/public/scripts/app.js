"use strict";function config(){}function RunBlock(){}function AboutController($scope){$scope.viewName="About"}function materialConfig($mdThemingProvider){$mdThemingProvider.theme("default").primaryPalette("red").accentPalette("grey")}function HomeController(musicFactory){this.musics=musicFactory.musics,this.playlists=musicFactory.playlists}function HomeService($resource){return{repositories:$resource()}}function musicFactory(){return{musics:[{artist:"Elton John",title:"Nikita"},{artist:"A-HA",title:"Stay on These Roads"}],playlists:[{title:"Pop"},{title:"Rock"}]}}function routes($locationProvider,$urlRouterProvider,$stateProvider){$locationProvider.html5Mode(!0),$urlRouterProvider.otherwise("/404"),$stateProvider.state("home",{url:"/",templateUrl:"templates/home.html",controller:"HomeController",controllerAs:"home"}).state("player",{url:"/player",templateUrl:"templates/player.html"})}angular.module("player-audio",["ngAnimate","ngResource","ngSanitize","ngTouch","ui.router","ngMaterial"]),angular.module("player-audio").config(config),angular.module("player-audio").run(RunBlock),angular.module("player-audio").controller("AboutController",AboutController),AboutController.$inject=["$scope"],angular.module("player-audio").config(materialConfig),materialConfig.$inject=["$mdThemingProvider"],angular.module("player-audio").controller("HomeController",HomeController),HomeController.$inject=["musicFactory"],angular.module("player-audio").service("HomeService",HomeService),HomeService.$inject=["$resource"],angular.module("player-audio").factory("musicFactory",musicFactory),angular.module("player-audio").config(routes),routes.$inject=["$locationProvider","$urlRouterProvider","$stateProvider"];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbmZpZy5qcyIsInJ1bi5qcyIsImFib3V0L2Fib3V0LmNvbnRyb2xsZXIuanMiLCJtYXRlcmlhbC9tYXRlcmlhbC5jb25maWcuanMiLCJob21lL2hvbWUuY29udHJvbGxlci5qcyIsImhvbWUvaG9tZS5zZXJ2aWNlLmpzIiwibXVzaWMvbXVzaWMuZmFjdG9yeS5qcyIsInJvdXRlcy9yb3V0ZXMuanMiXSwibmFtZXMiOlsiY29uZmlnIiwiUnVuQmxvY2siLCJBYm91dENvbnRyb2xsZXIiLCIkc2NvcGUiLCJ2aWV3TmFtZSIsIm1hdGVyaWFsQ29uZmlnIiwiJG1kVGhlbWluZ1Byb3ZpZGVyIiwidGhlbWUiLCJwcmltYXJ5UGFsZXR0ZSIsImFjY2VudFBhbGV0dGUiLCJIb21lQ29udHJvbGxlciIsIm11c2ljRmFjdG9yeSIsInRoaXMiLCJtdXNpY3MiLCJwbGF5bGlzdHMiLCJIb21lU2VydmljZSIsIiRyZXNvdXJjZSIsInJlcG9zaXRvcmllcyIsImFydGlzdCIsInRpdGxlIiwicm91dGVzIiwiJGxvY2F0aW9uUHJvdmlkZXIiLCIkdXJsUm91dGVyUHJvdmlkZXIiLCIkc3RhdGVQcm92aWRlciIsImh0bWw1TW9kZSIsIm90aGVyd2lzZSIsInN0YXRlIiwidXJsIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwiY29udHJvbGxlckFzIiwiYW5ndWxhciIsIm1vZHVsZSIsInJ1biIsIiRpbmplY3QiLCJzZXJ2aWNlIiwiZmFjdG9yeSJdLCJtYXBwaW5ncyI6IkFBQUEsWUNNQSxTQUFTQSxXQ0FULFFBQVNDLGFDQVQsUUFBU0MsaUJBQWlCQyxRQUN4QkEsT0FBT0MsU0FBVyxRQ0FwQixRQUFTQyxnQkFBZUMsb0JBQ3ZCQSxtQkFDRUMsTUFBTSxXQUNOQyxlQUFlLE9BQ2ZDLGNBQWMsUUNMakIsUUFBU0MsZ0JBQWdCQyxjQUN4QkMsS0FBS0MsT0FBU0YsYUFBYUUsT0FDM0JELEtBQUtFLFVBQVlILGFBQWFHLFVDRi9CLFFBQVNDLGFBQVlDLFdBQ25CLE9BQ0VDLGFBQWNELGFDRmpCLFFBQVNMLGdCQUNQLE9BQ0NFLFNBQ0NLLE9BQVEsYUFBY0MsTUFBTyxXQUM3QkQsT0FBUSxPQUFRQyxNQUFPLHdCQUV6QkwsWUFDRUssTUFBTyxRQUNQQSxNQUFPLFVDUlosUUFBU0MsUUFBT0Msa0JBQW1CQyxtQkFBb0JDLGdCQUNyREYsa0JBQWtCRyxXQUFVLEdBQzVCRixtQkFBbUJHLFVBQVUsUUFFN0JGLGVBQ0dHLE1BQU0sUUFDTEMsSUFBSyxJQUNMQyxZQUFhLHNCQUNiQyxXQUFZLGlCQUNaQyxhQUFjLFNBRWZKLE1BQU0sVUFDTEMsSUFBSyxVQUNMQyxZQUFhLDBCUmpCbkJHLFFBQ0dDLE9BQU8sZ0JBQ04sWUFDQSxhQUNBLGFBQ0EsVUFDQSxZQUNBLGVDUEpELFFBQ0dDLE9BQU8sZ0JBQ1BoQyxPQUFPQSxRQ0ZWK0IsUUFDR0MsT0FBTyxnQkFDUEMsSUFBSWhDLFVDRlA4QixRQUNHQyxPQUFPLGdCQUNQSCxXQUFXLGtCQUFtQjNCLGlCQUtqQ0EsZ0JBQWdCZ0MsU0FBVyxVQ1AzQkgsUUFDRUMsT0FBTyxnQkFDUGhDLE9BQU9LLGdCQVNUQSxlQUFlNkIsU0FBVyxzQkNYMUJILFFBQ0dDLE9BQU8sZ0JBQ1BILFdBQVcsaUJBQWtCbkIsZ0JBTWhDQSxlQUFld0IsU0FBVyxnQkNSMUJILFFBQ0VDLE9BQU8sZ0JBQ1BHLFFBQVEsY0FBZXBCLGFBT3pCQSxZQUFZbUIsU0FBVyxhQ1R2QkgsUUFDR0MsT0FBTyxnQkFDUEksUUFBUSxlQUFnQnpCLGNDRjNCb0IsUUFDR0MsT0FBTyxnQkFDUGhDLE9BQU9vQixRQWtCVkEsT0FBT2MsU0FBVyxvQkFBcUIscUJBQXNCIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhclxuICAubW9kdWxlKCdwbGF5ZXItYXVkaW8nLCBbXG4gICAgJ25nQW5pbWF0ZScsXG4gICAgJ25nUmVzb3VyY2UnLFxuICAgICduZ1Nhbml0aXplJyxcbiAgICAnbmdUb3VjaCcsXG4gICAgJ3VpLnJvdXRlcicsXG4gICAgJ25nTWF0ZXJpYWwnXG4gIF0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyXG4gIC5tb2R1bGUoJ3BsYXllci1hdWRpbycpXG4gIC5jb25maWcoY29uZmlnKTtcblxuZnVuY3Rpb24gY29uZmlnICgpIHtcblxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyXG4gIC5tb2R1bGUoJ3BsYXllci1hdWRpbycpXG4gIC5ydW4oUnVuQmxvY2spO1xuXG5mdW5jdGlvbiBSdW5CbG9jayAoKSB7XG5cbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhclxuICAubW9kdWxlKCdwbGF5ZXItYXVkaW8nKVxuICAuY29udHJvbGxlcignQWJvdXRDb250cm9sbGVyJywgQWJvdXRDb250cm9sbGVyKTtcblxuZnVuY3Rpb24gQWJvdXRDb250cm9sbGVyICgkc2NvcGUpIHtcbiAgJHNjb3BlLnZpZXdOYW1lID0gJ0Fib3V0Jztcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhclxuXHQubW9kdWxlKCdwbGF5ZXItYXVkaW8nKVxuXHQuY29uZmlnKG1hdGVyaWFsQ29uZmlnKTtcblxuXG5mdW5jdGlvbiBtYXRlcmlhbENvbmZpZygkbWRUaGVtaW5nUHJvdmlkZXIpe1xuXHQkbWRUaGVtaW5nUHJvdmlkZXJcblx0XHQudGhlbWUoJ2RlZmF1bHQnKVxuXHRcdC5wcmltYXJ5UGFsZXR0ZSgncmVkJylcblx0XHQuYWNjZW50UGFsZXR0ZSgnZ3JleScpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyXG4gIC5tb2R1bGUoJ3BsYXllci1hdWRpbycpXG4gIC5jb250cm9sbGVyKCdIb21lQ29udHJvbGxlcicsIEhvbWVDb250cm9sbGVyKTtcblxuZnVuY3Rpb24gSG9tZUNvbnRyb2xsZXIgKG11c2ljRmFjdG9yeSkge1xuXHR0aGlzLm11c2ljcyA9IG11c2ljRmFjdG9yeS5tdXNpY3M7XG5cdHRoaXMucGxheWxpc3RzID0gbXVzaWNGYWN0b3J5LnBsYXlsaXN0cztcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhclxuXHQubW9kdWxlKCdwbGF5ZXItYXVkaW8nKVxuXHQuc2VydmljZSgnSG9tZVNlcnZpY2UnLCBIb21lU2VydmljZSk7XG5cbmZ1bmN0aW9uIEhvbWVTZXJ2aWNlKCRyZXNvdXJjZSlcdHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0XHRyZXBvc2l0b3JpZXM6ICRyZXNvdXJjZSgpXG5cdFx0fTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhclxuICAubW9kdWxlKCdwbGF5ZXItYXVkaW8nKVxuICAuZmFjdG9yeSgnbXVzaWNGYWN0b3J5JywgbXVzaWNGYWN0b3J5KTtcblxuIGZ1bmN0aW9uIG11c2ljRmFjdG9yeSgpIHtcbiBcdFx0cmV0dXJuIHtcbiBcdFx0XHRtdXNpY3M6IFtcblx0XHRcdFx0e2FydGlzdDogJ0VsdG9uIEpvaG4nLCB0aXRsZTogJ05pa2l0YSd9LFxuXHRcdFx0XHR7YXJ0aXN0OiAnQS1IQScsIHRpdGxlOiAnU3RheSBvbiBUaGVzZSBSb2Fkcyd9XG5cdFx0XHRdLFxuXHRcdFx0cGxheWxpc3RzOiBbXG5cdFx0XHRcdHt0aXRsZTogJ1BvcCd9LFxuXHRcdFx0XHR7dGl0bGU6ICdSb2NrJ31cblx0XHRcdF1cblx0XHR9O1xuIH1cblxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyXG4gIC5tb2R1bGUoJ3BsYXllci1hdWRpbycpXG4gIC5jb25maWcocm91dGVzKTtcblxuZnVuY3Rpb24gcm91dGVzKCRsb2NhdGlvblByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIsICRzdGF0ZVByb3ZpZGVyKSB7XG4gICRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh0cnVlKTtcbiAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnLzQwNCcpO1xuXG4gICRzdGF0ZVByb3ZpZGVyXG4gICAgLnN0YXRlKCdob21lJywge1xuICAgICAgdXJsOiAnLycsXG4gICAgICB0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlcy9ob21lLmh0bWwnLFxuICAgICAgY29udHJvbGxlcjogJ0hvbWVDb250cm9sbGVyJyxcbiAgICAgIGNvbnRyb2xsZXJBczogJ2hvbWUnXG4gICAgfSlcbiAgICAuc3RhdGUoJ3BsYXllcicsIHtcbiAgICAgIHVybDogJy9wbGF5ZXInLFxuICAgICAgdGVtcGxhdGVVcmw6ICd0ZW1wbGF0ZXMvcGxheWVyLmh0bWwnLFxuICAgIH0pO1xufVxuIl0sInNvdXJjZVJvb3QiOiIvYXNzZXRzL2FuZ3VsYXIifQ==
